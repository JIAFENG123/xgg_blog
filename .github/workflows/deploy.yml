name: SimplePipeline

on:
  workflow_dispatch:
    branches: [main]


env:
  # docker仓库的命名空间，可进入容器镜像服务/实例列表/命名空间查看
  DOCKER_NAMESPACE: xgg-docker
  # 自定义的镜像基础名称
  BASE_IMAGE_NAME: nextjs_demo
  # 可以通过 对象存储/Bucket列表 新建或者查看bucket
  OSS_BUCKET: xgg-bucket
  # 可以通过 对象存储/Bucket列表/[对应bucket名称]/概览 来查看
  OSS_END_POINT: oss-cn-shenzhen.aliyuncs.com

  IMAGE_TAG: xgg-docker-test
jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Clone Repostitory
        uses: actions/checkout@v2
      # 第3步的准备工作，先配置好node环境
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

        # 对应第3步，执行打包命令
      - name: 'Build Front'
        run: |
          npm i
          npm run build

      # 第4步的准备工作，登陆OSS
      - name: Set up OSS
        uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: ${{ env.OSS_END_POINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY }}
          access-key-secret: ${{ secrets.OSS_ACCESS_SECRET }}

      # 对应第4步，上传前端资源到阿里云 OSS
      - name: Upload to OSS
        run: ossutil cp -r .next/static/ oss://${{ env.OSS_BUCKET }}/_next/static

        # 第5步的准备工作，设置docker环境
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      # 第5步的准备工作，登陆阿里云docker仓库
      - name: Login to Ali Docker
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ALI_DOCKER_REGISTRY }}
          username: ${{ secrets.ALI_DOCKER_USERNAME }}
          password: ${{ secrets.ALI_DOCKER_PASSWORD }}
      
      # 对应第5步，构建 docker 镜像，并上传到阿里云镜像服务
      - name: Build and push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          tags: ${{ env.IMAGE_TAG }}


      # - name: Server Start
      #   uses: appleboy/ssh-action@master
      #   with: 
      #     host: ${{ secrets.REMOTE_HOST }}
      #     username: ${{ secrets.REMOTE_USERNAME }}
      #     key: ${{ secrets.PRIVATE_KEY }}

          # script: |
          #   echo "test..."
          #   cd /home/wms/nginx
          #   rm -rf /home/wms/nginx/blog
          #   rm -rf /home/wms/nginx/xgg_blog
          #   git clone https://github.com/JIAFENG123/xgg_blog.git
          #   cd xgg_blog
          #   docker stop my-blog
          #   docker rm my-blog
          #   docker rmi blog
          #   docker build -t blog .
          #   docker run  -p 3000:3000 --name my-blog -d blog
          #   docker restart nginx_wms
